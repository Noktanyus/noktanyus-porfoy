name: ⚡ Performance & Lighthouse

on:
  pull_request:
    branches: [ "master", "main" ]
  push:
    branches: [ "master", "main" ]
  workflow_dispatch:

jobs:
  # ⚡ Lighthouse CI
  lighthouse:
    name: ⚡ Lighthouse Performance
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🏗️ Build application
        run: npm run build
        env:
          SKIP_ENV_VALIDATION: true

      - name: 🚀 Start application
        run: |
          npm start &
          sleep 30
        env:
          PORT: 3000

      - name: ⚡ Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: './.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true
        continue-on-error: true

  # 📊 Bundle Analysis
  bundle-analysis:
    name: 📊 Bundle Size Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🏗️ Build for analysis
        run: npm run build
        env:
          ANALYZE: true
          SKIP_ENV_VALIDATION: true

      - name: 📊 Analyze bundle size
        run: |
          echo "## 📦 Bundle Size Analysis" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -d ".next/static" ]; then
            echo "### JavaScript Bundles:" >> $GITHUB_STEP_SUMMARY
            find .next/static -name "*.js" -type f -exec ls -lh {} \; | awk '{print "- " $9 ": " $5}' | head -10 >> $GITHUB_STEP_SUMMARY
            
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### CSS Files:" >> $GITHUB_STEP_SUMMARY
            find .next/static -name "*.css" -type f -exec ls -lh {} \; | awk '{print "- " $9 ": " $5}' | head -5 >> $GITHUB_STEP_SUMMARY
            
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Total Build Size:" >> $GITHUB_STEP_SUMMARY
            du -sh .next >> $GITHUB_STEP_SUMMARY
          fi

  # 🔍 Performance Audit
  performance-audit:
    name: 🔍 Performance Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🔍 Check for performance anti-patterns
        run: |
          echo "## 🔍 Performance Audit Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check for large images
          echo "### 🖼️ Image Analysis:" >> $GITHUB_STEP_SUMMARY
          if [ -d "public" ]; then
            find public -name "*.jpg" -o -name "*.jpeg" -o -name "*.png" -o -name "*.gif" 2>/dev/null | while read file; do
              if [ -f "$file" ]; then
                size=$(stat -c%s "$file" 2>/dev/null || echo "0")
                if [ "$size" -gt 500000 ]; then
                  echo "⚠️ Large image detected: $file ($(($size / 1024))KB)" >> $GITHUB_STEP_SUMMARY
                fi
              fi
            done || echo "✅ No large images found" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ No public directory found" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check for console.log statements
          echo "### 🐛 Debug Code Analysis:" >> $GITHUB_STEP_SUMMARY
          if grep -r "console\." src/ --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" | head -5; then
            echo "⚠️ Console statements found in production code" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ No console statements found" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check for TODO/FIXME comments
          echo "### 📝 Code Quality Notes:" >> $GITHUB_STEP_SUMMARY
          TODO_COUNT=$(grep -r "TODO\|FIXME" src/ --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" | wc -l || echo "0")
          echo "📋 TODO/FIXME comments: $TODO_COUNT" >> $GITHUB_STEP_SUMMARY

  # 📊 Performance Summary
  performance-summary:
    name: 📊 Performance Summary
    runs-on: ubuntu-latest
    needs: [lighthouse, bundle-analysis, performance-audit]
    if: always()
    
    steps:
      - name: 📊 Generate performance summary
        run: |
          echo "## ⚡ Performance Analysis Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Lighthouse | ${{ needs.lighthouse.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Bundle Analysis | ${{ needs.bundle-analysis.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Performance Audit | ${{ needs.performance-audit.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔗 Check individual job results for detailed performance metrics." >> $GITHUB_STEP_SUMMARY