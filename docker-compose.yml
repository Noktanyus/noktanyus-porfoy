services:
  web:
    # Mevcut dizindeki Dockerfile'ı kullanarak imajı build et
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - DATABASE_URL=${DATABASE_URL}
        - NEXTAUTH_URL=${NEXTAUTH_URL}
        - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
        - ADMIN_EMAIL=${ADMIN_EMAIL}
        - ADMIN_PASSWORD=${ADMIN_PASSWORD}
        - TURNSTILE_SECRET_KEY=${TURNSTILE_SECRET_KEY}
        - EMAIL_SERVER=${EMAIL_SERVER}
        - EMAIL_PORT=${EMAIL_PORT}
        - EMAIL_USER=${EMAIL_USER}
        - EMAIL_PASSWORD=${EMAIL_PASSWORD}
        - NEXT_PUBLIC_BASE_URL=${NEXT_PUBLIC_BASE_URL}
        - NEXT_PUBLIC_TURNSTILE_SITE_KEY=${NEXT_PUBLIC_TURNSTILE_SITE_KEY}
    # Container'a bir isim ver
    container_name: noktanyus-portfolio
    # Container yeniden başladığında otomatik olarak çalıştır
    restart: unless-stopped
    # Port yönlendirmesi: Host'taki 3000 portunu Container'daki 3000 portuna bağla
    ports:
      - "3000:3000"
    # Ortam değişkenlerini .env dosyasından yükle
    env_file:
      - .env
    # Kalıcı veri için volume tanımı
    volumes:
      # 'public_volume' adında bir Docker volume'ünü, container içindeki
      # '/app/public' klasörüne bağla. Bu, tüm public klasörünü kalıcı hale getirir.
      - public_volume:/app/public

# Docker tarafından yönetilecek olan volume'ü tanımla
volumes:
  public_volume:
